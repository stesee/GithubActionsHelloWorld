//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://gcomputer.net/webservices/", ConfigurationName="ServiceReference.DilbertSoap")]
    public interface DilbertSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gcomputer.net/webservices/TodaysDilbert", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference.TodaysDilbertResponse> TodaysDilbertAsync(ServiceReference.TodaysDilbertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gcomputer.net/webservices/DailyDilbert", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference.DailyDilbertResponse> DailyDilbertAsync(ServiceReference.DailyDilbertRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TodaysDilbertRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TodaysDilbert", Namespace="http://gcomputer.net/webservices/", Order=0)]
        public ServiceReference.TodaysDilbertRequestBody Body;
        
        public TodaysDilbertRequest()
        {
        }
        
        public TodaysDilbertRequest(ServiceReference.TodaysDilbertRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class TodaysDilbertRequestBody
    {
        
        public TodaysDilbertRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TodaysDilbertResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TodaysDilbertResponse", Namespace="http://gcomputer.net/webservices/", Order=0)]
        public ServiceReference.TodaysDilbertResponseBody Body;
        
        public TodaysDilbertResponse()
        {
        }
        
        public TodaysDilbertResponse(ServiceReference.TodaysDilbertResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://gcomputer.net/webservices/")]
    public partial class TodaysDilbertResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string TodaysDilbertResult;
        
        public TodaysDilbertResponseBody()
        {
        }
        
        public TodaysDilbertResponseBody(string TodaysDilbertResult)
        {
            this.TodaysDilbertResult = TodaysDilbertResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DailyDilbertRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DailyDilbert", Namespace="http://gcomputer.net/webservices/", Order=0)]
        public ServiceReference.DailyDilbertRequestBody Body;
        
        public DailyDilbertRequest()
        {
        }
        
        public DailyDilbertRequest(ServiceReference.DailyDilbertRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://gcomputer.net/webservices/")]
    public partial class DailyDilbertRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.DateTime ADate;
        
        public DailyDilbertRequestBody()
        {
        }
        
        public DailyDilbertRequestBody(System.DateTime ADate)
        {
            this.ADate = ADate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DailyDilbertResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DailyDilbertResponse", Namespace="http://gcomputer.net/webservices/", Order=0)]
        public ServiceReference.DailyDilbertResponseBody Body;
        
        public DailyDilbertResponse()
        {
        }
        
        public DailyDilbertResponse(ServiceReference.DailyDilbertResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://gcomputer.net/webservices/")]
    public partial class DailyDilbertResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string DailyDilbertResult;
        
        public DailyDilbertResponseBody()
        {
        }
        
        public DailyDilbertResponseBody(string DailyDilbertResult)
        {
            this.DailyDilbertResult = DailyDilbertResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface DilbertSoapChannel : ServiceReference.DilbertSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class DilbertSoapClient : System.ServiceModel.ClientBase<ServiceReference.DilbertSoap>, ServiceReference.DilbertSoap
    {
        
        /// <summary>
        /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
        /// </summary>
        /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
        /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DilbertSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(DilbertSoapClient.GetBindingForEndpoint(endpointConfiguration), DilbertSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DilbertSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DilbertSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DilbertSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DilbertSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DilbertSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference.TodaysDilbertResponse> ServiceReference.DilbertSoap.TodaysDilbertAsync(ServiceReference.TodaysDilbertRequest request)
        {
            return base.Channel.TodaysDilbertAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.TodaysDilbertResponse> TodaysDilbertAsync()
        {
            ServiceReference.TodaysDilbertRequest inValue = new ServiceReference.TodaysDilbertRequest();
            inValue.Body = new ServiceReference.TodaysDilbertRequestBody();
            return ((ServiceReference.DilbertSoap)(this)).TodaysDilbertAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference.DailyDilbertResponse> ServiceReference.DilbertSoap.DailyDilbertAsync(ServiceReference.DailyDilbertRequest request)
        {
            return base.Channel.DailyDilbertAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.DailyDilbertResponse> DailyDilbertAsync(System.DateTime ADate)
        {
            ServiceReference.DailyDilbertRequest inValue = new ServiceReference.DailyDilbertRequest();
            inValue.Body = new ServiceReference.DailyDilbertRequestBody();
            inValue.Body.ADate = ADate;
            return ((ServiceReference.DilbertSoap)(this)).DailyDilbertAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DilbertSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.DilbertSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DilbertSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://www.gcomputer.net/webservices/dilbert.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.DilbertSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://www.gcomputer.net/webservices/dilbert.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            DilbertSoap,
            
            DilbertSoap12,
        }
    }
}
