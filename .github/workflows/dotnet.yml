name: .NET build and test
env:
  CURRENT_VERSION: 1.0.${{ github.run_number }}
  LAST_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        dotnet: [8, 7, 6]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}.0.x
    - name: Create temporary global.json
      run: "echo '{\"sdk\":{\"version\": \"${{ matrix.dotnet }}.0.0\" ,\"rollForward\": \"latestMajor\" }}' > ./global.json"
    - name: Debug global.json
      run: "cat ./global.json"
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore --framework net${{ matrix.dotnet }}.0
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release --framework net${{ matrix.dotnet }}.0

  deployRelease:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build 
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          8.0.x
          7.0.x
          6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: NugetPush
      env:
        NUGET_TOKEN_EXISTS: ${{ secrets.NUGET_TEST_TOKEN }}
      if:  env.NUGET_TOKEN_EXISTS != ''
      run: |
          ls ./GithubActionsHelloWorld/bin/Release
          dotnet nuget push ./GithubActionsHelloWorld/bin/Release/*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TEST_TOKEN}} --source https://apiint.nugettest.org/v3/index.json
    - name: Github release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
      if:  env.GITHUB_TOKEN != ''
      run: |
          gh release create ${{env.CURRENT_VERSION}} ./GithubActionsHelloWorld/bin/Release/*.*nupkg --generate-notes
  deployTest:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build 
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          8.0.x
          7.0.x
          6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: NugetPush
      env:
        NUGET_TOKEN_TEST_EXISTS: ${{ secrets.NUGET_TEST_TOKEN }}
      if:  env.NUGET_TOKEN_TEST_EXISTS != ''
      run: |
          ls ./GithubActionsHelloWorld/bin/Release
          dotnet nuget push ./GithubActionsHelloWorld/bin/Release/*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TEST_TOKEN}} --source https://apiint.nugettest.org/v3/index.json
    - name: Github release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
      if:  env.GITHUB_TOKEN != ''
      run: |
          gh release create ${{env.CURRENT_VERSION}} ./GithubActionsHelloWorld/bin/Release/*.*nupkg --prerelease --generate-notes

